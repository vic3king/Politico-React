// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavBar component should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NavBar
    LiTagOne=""
    LiTagTwo=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <header
        className="main-header"
      >
        <div>
          <i
            className="fa fa-balance-scale fa-lg"
          />
          <Link
            className="main-header__brand"
            to="/"
          >
            Politico
          </Link>
        </div>
        <nav
          className="main-nav"
        >
          <ul
            className="main-nav__items"
          >
            
            
          </ul>
        </nav>
      </header>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <i
              className="fa fa-balance-scale fa-lg"
            />
            <Link
              className="main-header__brand"
              to="/"
            >
              Politico
            </Link>
          </div>,
          <nav
            className="main-nav"
          >
            <ul
              className="main-nav__items"
            >
              
              
            </ul>
          </nav>,
        ],
        "className": "main-header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                className="fa fa-balance-scale fa-lg"
              />,
              <Link
                className="main-header__brand"
                to="/"
              >
                Politico
              </Link>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa fa-balance-scale fa-lg",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Politico",
                "className": "main-header__brand",
                "to": "/",
              },
              "ref": null,
              "rendered": "Politico",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ul
              className="main-nav__items"
            >
              
              
            </ul>,
            "className": "main-nav",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "",
                "",
              ],
              "className": "main-nav__items",
            },
            "ref": null,
            "rendered": Array [
              "",
              "",
            ],
            "type": "ul",
          },
          "type": "nav",
        },
      ],
      "type": "header",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <header
          className="main-header"
        >
          <div>
            <i
              className="fa fa-balance-scale fa-lg"
            />
            <Link
              className="main-header__brand"
              to="/"
            >
              Politico
            </Link>
          </div>
          <nav
            className="main-nav"
          >
            <ul
              className="main-nav__items"
            >
              
              
            </ul>
          </nav>
        </header>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              <i
                className="fa fa-balance-scale fa-lg"
              />
              <Link
                className="main-header__brand"
                to="/"
              >
                Politico
              </Link>
            </div>,
            <nav
              className="main-nav"
            >
              <ul
                className="main-nav__items"
              >
                
                
              </ul>
            </nav>,
          ],
          "className": "main-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <i
                  className="fa fa-balance-scale fa-lg"
                />,
                <Link
                  className="main-header__brand"
                  to="/"
                >
                  Politico
                </Link>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fa fa-balance-scale fa-lg",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Politico",
                  "className": "main-header__brand",
                  "to": "/",
                },
                "ref": null,
                "rendered": "Politico",
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <ul
                className="main-nav__items"
              >
                
                
              </ul>,
              "className": "main-nav",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "",
                  "",
                ],
                "className": "main-nav__items",
              },
              "ref": null,
              "rendered": Array [
                "",
                "",
              ],
              "type": "ul",
            },
            "type": "nav",
          },
        ],
        "type": "header",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
