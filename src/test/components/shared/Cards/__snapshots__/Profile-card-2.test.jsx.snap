// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProfileBottomSectionCard component should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProfileBottomSectionCard
    hideOfficeModal={[MockFunction]}
    hidePartyModal={[MockFunction]}
    parties={Array []}
    updateDelete={[MockFunction]}
    updatePartiesName="test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        false,
        false,
        false,
        <div
          id="grid__two"
        />,
        <div
          className="middle"
        >
          <div
            className="pagination"
            id="page-numbers"
          />
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      false,
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "id": "grid__two",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="pagination"
            id="page-numbers"
          />,
          "className": "middle",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "pagination",
            "id": "page-numbers",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          false,
          false,
          false,
          <div
            id="grid__two"
          />,
          <div
            className="middle"
          >
            <div
              className="pagination"
              id="page-numbers"
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        false,
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "id": "grid__two",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="pagination"
              id="page-numbers"
            />,
            "className": "middle",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "className": "pagination",
              "id": "page-numbers",
            },
            "ref": null,
            "rendered": Array [],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
