// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProfileDetails component should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Select />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <option
          name="type"
          value="federal"
        >
          federal
        </option>,
        <option
          name="type"
          value="legislative"
        >
          legislative
        </option>,
        <option
          name="type"
          value="state"
        >
          state
        </option>,
        <option
          name="type"
          value="local-government"
        >
          local-government
        </option>,
      ],
      "id": "type",
      "onChange": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "federal",
          "name": "type",
          "value": "federal",
        },
        "ref": null,
        "rendered": "federal",
        "type": "option",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "legislative",
          "name": "type",
          "value": "legislative",
        },
        "ref": null,
        "rendered": "legislative",
        "type": "option",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "state",
          "name": "type",
          "value": "state",
        },
        "ref": null,
        "rendered": "state",
        "type": "option",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "local-government",
          "name": "type",
          "value": "local-government",
        },
        "ref": null,
        "rendered": "local-government",
        "type": "option",
      },
    ],
    "type": "select",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <option
            name="type"
            value="federal"
          >
            federal
          </option>,
          <option
            name="type"
            value="legislative"
          >
            legislative
          </option>,
          <option
            name="type"
            value="state"
          >
            state
          </option>,
          <option
            name="type"
            value="local-government"
          >
            local-government
          </option>,
        ],
        "id": "type",
        "onChange": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "federal",
            "name": "type",
            "value": "federal",
          },
          "ref": null,
          "rendered": "federal",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "legislative",
            "name": "type",
            "value": "legislative",
          },
          "ref": null,
          "rendered": "legislative",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "state",
            "name": "type",
            "value": "state",
          },
          "ref": null,
          "rendered": "state",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "local-government",
            "name": "type",
            "value": "local-government",
          },
          "ref": null,
          "rendered": "local-government",
          "type": "option",
        },
      ],
      "type": "select",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
