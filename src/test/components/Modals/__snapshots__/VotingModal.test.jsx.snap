// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VotingModal component should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <VotingModal
    hide={[MockFunction]}
    officeId={1}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <$class
          options={Object {}}
        />,
        <Loader />,
        <div
          className="modal__results"
        >
          <div
            className="modal-results"
          >
            <button
              id="btn"
              onClick={[Function]}
              type="button"
            >
              X
            </button>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "options": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [MockFunction],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="modal-results"
          >
            <button
              id="btn"
              onClick={[Function]}
              type="button"
            >
              X
            </button>
          </div>,
          "className": "modal__results",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              Array [],
              <button
                id="btn"
                onClick={[Function]}
                type="button"
              >
                X
              </button>,
            ],
            "className": "modal-results",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "X",
                "id": "btn",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": "X",
              "type": "button",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <$class
            options={Object {}}
          />,
          <Loader />,
          <div
            className="modal__results"
          >
            <div
              className="modal-results"
            >
              <button
                id="btn"
                onClick={[Function]}
                type="button"
              >
                X
              </button>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "options": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [MockFunction],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="modal-results"
            >
              <button
                id="btn"
                onClick={[Function]}
                type="button"
              >
                X
              </button>
            </div>,
            "className": "modal__results",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                Array [],
                <button
                  id="btn"
                  onClick={[Function]}
                  type="button"
                >
                  X
                </button>,
              ],
              "className": "modal-results",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "X",
                  "id": "btn",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": "X",
                "type": "button",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
